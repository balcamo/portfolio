{"version":3,"sources":["componets/nav.js","componets/Home.js","componets/Equipment.js","componets/maintenance.js","shared/baseUrl.js","redux/ActionCreators.js","redux/ActionTypes.js","componets/Main.js","shared/equipList.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","AuthConfig.js","index.js"],"names":["NavNav","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","dropdownOpen","setState","react_default","a","createElement","reactstrap_es","pills","href","className","nav","isOpen","caret","divider","Component","Home","Equipment","listofEquip","equipment","map","equip","key","id","color","onClick","open","name","type","properties","Properties","property","prop","Fragment","RenderPropertiesList","striped","scope","services","console","log","Services","service","person","previousDate","date","notes","RenderServices","Maintenance","_useState","useState","tab","_useState2","slicedToArray","activeTab","setTab","react_router_dom","to","active","tabs","classnames","tabId","componets_Equipment","data-toggle","data-target","aria-controls","aria-labelledby","data-parent","role","baseUrl","locationsLoading","locationsFailed","errmess","payload","addLocations","dishes","equipmentLoading","equipmentFailed","addEquipment","addService","Main","fetchLocations","fetchEquipment","light","react_router","path","render","_ref","match","maintenance","equipList","filter","parseInt","params","withRouter","connect","locations","comments","promotions","dispatch","postService","dishId","rating","author","comment","newService","Date","toISOString","fetch","method","body","JSON","stringify","headers","Content-Type","credentials","then","response","ok","error","Error","status","statusText","json","catch","message","alert","promos","EQUIPLIST","location","chlorinatorEquipment","motor","horsePower","oilType","serial","greaseType","flowMeter","chlorinatorService","InitialNewEquip","InitialNewService","serviceName","store","createStore","combineReducers","objectSpread","createForms","newEquip","applyMiddleware","thunk","logger","App","es","componets_Main","Boolean","window","hostname","adalConfig","tenant","clientId","endpoints","api","apiUrl","cacheLocation","authContext","AuthenticationContext","withAdalLogin","runWithAdal","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.54a25241.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport { NavItem, Dropdown, DropdownItem, DropdownToggle, \r\n    DropdownMenu, Nav, NavLink } from 'reactstrap';\r\n\r\nclass NavNav extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.toggle = this.toggle.bind(this);\r\n        this.state = {\r\n          dropdownOpen: false\r\n        };\r\n      }\r\n    \r\n    toggle() {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        });\r\n    }\r\n    render(){\r\n\r\n        return(\r\n            <div>\r\n                <Nav pills>\r\n                    <NavItem>\r\n                        <NavLink href=\"/\"><span className=\"fa fa-home fa-lg\"></span> Home </NavLink>\r\n                    </NavItem>\r\n                    <Dropdown nav isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n                        <DropdownToggle nav caret>\r\n                            <span className=\"fa fa-suitcase fa-lg\"></span> \r\n                            Equipment \r\n                            <b className=\"caret\"></b>\r\n                        </DropdownToggle>\r\n                        <DropdownMenu>\r\n                            <DropdownItem href=\"/equip/1\">Well 1</DropdownItem>\r\n                            <DropdownItem>Well 2</DropdownItem>\r\n                            <DropdownItem>Well 3</DropdownItem>\r\n                            <DropdownItem>Well 4</DropdownItem>\r\n                            <DropdownItem>Well 5</DropdownItem>\r\n                            <DropdownItem>well 6</DropdownItem>\r\n                            <DropdownItem>Well 7</DropdownItem>\r\n                            <DropdownItem>Well 8</DropdownItem> \r\n                            <DropdownItem>Well 9</DropdownItem> \r\n                            <DropdownItem divider />\r\n                            <DropdownItem>Booster 1</DropdownItem>\r\n                            <DropdownItem>Booster 2</DropdownItem>\r\n                            <DropdownItem>Booster 3</DropdownItem>\r\n                            <DropdownItem>Booster 4</DropdownItem>\r\n                            <DropdownItem>Booster 5</DropdownItem>\r\n                            <DropdownItem divider />\r\n                            <DropdownItem>Reservior 1</DropdownItem>\r\n                            <DropdownItem>Reservior 2</DropdownItem>\r\n                            <DropdownItem>Reservior 3</DropdownItem>\r\n                            <DropdownItem>Reservior 4</DropdownItem>\r\n                            <DropdownItem>Reservior 5</DropdownItem> \r\n            \r\n                        </DropdownMenu>\r\n                    </Dropdown>\r\n                    \r\n                    <NavItem >\r\n                        <NavLink href=\"#\"><span className=\"fa fa-map-o fa-lg\"></span> Maps</NavLink>\r\n                    </NavItem>\r\n                    <NavItem >\r\n                        <NavLink href=\"#\"><span className=\"fa fa-address-card fa-lg\"></span> ???</NavLink>\r\n                    </NavItem>\r\n                </Nav>\r\n\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\nexport default  NavNav;","import React from 'react';\r\n\r\nfunction Home(){\r\n    return(\r\n        <div>\r\n             <h1>This is going to be the maintenance log!</h1>\r\n        </div>\r\n    );\r\n}\r\nexport default Home;","import React from 'react';\r\nimport { Button, Card, CardBody, Collapse, CardHeader, Table } from 'reactstrap';\r\n\r\nfunction RenderPropertiesList(properties){\r\n    \r\n    if(properties!=null){\r\n\r\n        const Properties = properties.map((property)=>{\r\n            return(<p>{property.name}: {property.prop}</p>);\r\n        });\r\n        return(\r\n            <React.Fragment>\r\n            <CardHeader>\r\n                <h5><b>Info</b> </h5>\r\n                <div className=\"row equipInfo\"> \r\n                    {Properties}\r\n                </div>\r\n            </CardHeader>\r\n            </React.Fragment>\r\n                    \r\n        );}\r\n    else \r\n        return(<div></div>);\r\n    \r\n}\r\n\r\nfunction RenderServices(services){\r\n\r\n    if(services!=null){\r\n        console.log(services)\r\n        const Services = services.map((service)=>{\r\n            return(\r\n                <tr>\r\n                    <th><Button>{service.type}</Button></th>\r\n                    <td>{service.person}</td>\r\n                    <td>{service.previousDate}</td>\r\n                    <td>{service.date}</td>\r\n                    <td>{service.notes}</td>\r\n                </tr>\r\n            );}\r\n        );\r\n        return(\r\n            <React.Fragment>\r\n                <tbody>\r\n                    {Services}\r\n                </tbody>\r\n            </React.Fragment>);\r\n        }\r\n    else\r\n        return(<div></div>);\r\n}\r\nfunction Equipment(props){\r\n\r\n    const listofEquip = props.equipment.map((equip) => {\r\n        return (\r\n            <div key={equip.id}>\r\n            <div className=\"equipList\">\r\n                <Button color=\"primary\"  onClick={() => {equip.open = !equip.open} } >\r\n                    {equip.name}\r\n                </Button>\r\n                <Button type=\"button\" className=\"edit\" ><i className=\"fa fa-edit\"></i> </Button>\r\n                <Collapse isOpen={equip.open}>\r\n                    <Card>\r\n                        {RenderPropertiesList(equip.properties)}\r\n                        <CardBody>\r\n                            <Table striped >\r\n                                {/*  Table Header */}\r\n                                <thead >\r\n                                    <tr>\r\n                                        <th scope=\"col\">Maintenance Task</th>\r\n                                        <th scope=\"col\">Who did the Work</th>\r\n                                        <th scope=\"col\">Last Service Date</th>\r\n                                        <th scope=\"col\">Next Service Date</th>\r\n                                        <th scope=\"col\">Notes</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                {/* same as prperties for each tr */}\r\n                                {RenderServices(equip.services)}\r\n                                <button className=\"btn btn-secondary\">Add Service</button>\r\n                            </Table>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Collapse>\r\n            </div>\r\n            </div>\r\n        );\r\n    });\r\n    if(listofEquip!=null)\r\n        return(\r\n            <div>\r\n                <div className=\"card \">\r\n                    {listofEquip}\r\n                </div>\r\n                {/* add equipment */}\r\n                <button className=\"btn btn-secondary\">Add Equipment</button>\r\n            </div>\r\n        );\r\n    else\r\n        return(<div></div>);\r\n} \r\n\r\nexport default Equipment;","import React, {useState} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { TabContent, Nav, NavItem, NavLink, TabPane } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport Equipment from './Equipment';    \r\n    \r\n\r\nfunction Maintenance(props){\r\n    const [activeTab, setTab] = useState(props.tab);\r\n    return(\r\n        <div className=\"container\">\r\n            {/* Breadcrumb */}\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>{props.equip.name}</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                <h3>{props.equip.name}</h3>\r\n            </div>\r\n            </div>\r\n            {/* Equipment Table  */}\r\n            <div className=\"row row-content\">\r\n                <Nav tabs>\r\n                    <NavItem>\r\n                        <NavLink className={classnames({ active: activeTab === '1' })}\r\n                            onClick={() => { setTab('1'); }}\r\n                            >Well House</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink className={classnames({ active: activeTab === '2' })}\r\n                            onClick={() => { setTab('2'); }}\r\n                            >Chlorinator</NavLink>\r\n                    </NavItem>\r\n                </Nav>\r\n                <TabContent activeTab={activeTab}>\r\n                    {/* well house */}\r\n                    <TabPane tabId=\"1\">\r\n                        <Equipment equipment={props.equip.equipment} />\r\n                    </TabPane>\r\n                    \r\n                    {/* Chlorinator */}\r\n                    <TabPane tabId=\"2\">\r\n                        <div className=\"accordion equipList\" id=\"chlorinatorEquipment\">\r\n                        <h1>Chlorinator</h1>\r\n                        <div className=\"card \">\r\n                            <div className=\"card-header\" id=\"motor1\">\r\n                                <h5 className=\"mb-0\">\r\n                                    <button className=\"btn btn-link\" type=\"button\" data-toggle=\"accordion\" data-target=\"#motor1Collapse\" aria-controls=\"motor1Collapse\">\r\n                                    Motor\r\n                                    </button>\r\n                                    <button type=\"button\" className=\"edit\" ><i className=\"fa fa-edit\"></i> </button>\r\n                                </h5>\r\n                            </div>\r\n                            <div id=\"motor1Collapse\" className=\"collapse show\" aria-labelledby=\"motor1\" data-parent=\"#Well1Equipment\">\r\n                                <div className=\"card-body\">\r\n                                    <h5><b>Info</b> </h5>\r\n                                    <div className=\"row equipInfo\"> \r\n                                        <p className=\"col\">Horse pwr: boop</p>\r\n                                        <p className=\"col\">Oil Type: 20w</p>\r\n                                        <p className=\"col\">serial number:yyyyyyyyyyy</p>\r\n                                        <p className=\"col\">Grease Type:abc</p>\r\n                                    </div>\r\n                                    \r\n                                    <table className=\"table table-striped table-hover\">\r\n                                        {/* Table Header */}\r\n                                        <thead className=\"thead-dark\">\r\n                                            <tr>\r\n                                                <th scope=\"col\">Maintenance Task</th>\r\n                                                <th scope=\"col\">Who did the Work</th>\r\n                                                <th scope=\"col\">Last Service Date</th>\r\n                                                <th scope=\"col\">Next Service Date</th>\r\n                                                <th scope=\"col\">Notes</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <th><button type=\"button\" className=\"btn\" data-target=\"#oilModal\">Oil Change</button></th>\r\n                                                <th>Brady</th>\r\n                                                <th>May 30, 2018</th>\r\n                                                <th>May 30, 2019</th>\r\n                                                <th>Send oil out to be checked</th>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th><button type=\"button\" className=\"btn\" data-target=\"#oilModal\">Grease stuffing box</button></th>\r\n                                                <th>Brady</th>\r\n                                                <th>May 30, 2018</th>\r\n                                                <th>May 30, 2019</th>\r\n                                                <th>Send oil out to be checked</th>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <button className=\"btn btn-secondary\" id=\"motorService\">Add Service</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\" id=\"chlorinator\">\r\n                                <h5 className=\"mb-0\">\r\n                                    <button className=\"btn btn-link\" type=\"button\" data-toggle=\"accordion\" data-target=\"#chlorinatorCollapse\" aria-controls=\"chlorinatorCollapse\">\r\n                                    Pump 350hp\r\n                                    </button>\r\n                                </h5>\r\n                            </div>\r\n                            <div id=\"chlorinatorCollapse\" className=\"collapse\" aria-labelledby=\"chlorinator\" data-parent=\"#Well1Equipment\">\r\n                                <div className=\"card-body\">\r\n                                    <h5><b>Info</b> </h5>\r\n                                    <div className=\"row equipInfo\"> \r\n                                        <p className=\"col\">Horse pwr: 350</p>\r\n                                        <p className=\"col\">Date installed: 05/30/2016</p>\r\n                                        <p className=\"col\">serial number:xxxxxxxxxxx</p>\r\n                                        <p className=\"col\">Grease Type:???</p>\r\n                                    </div>\r\n                                    <table className=\"table table-striped table-hover\">\r\n                                        {/* Table Header */}\r\n                                        <thead className=\"thead-dark\">\r\n                                            <tr>\r\n                                                <th scope=\"col\">Maintenance Task</th>\r\n                                                <th scope=\"col\">Who did the Work</th>\r\n                                                <th scope=\"col\">Last Service Date</th>\r\n                                                <th scope=\"col\">Next Service Date</th>\r\n                                                <th scope=\"col\">Notes</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <th>Filter Change</th>\r\n                                                <th>Brady</th>\r\n                                                <th>March 10, 2019</th>\r\n                                                <th>August 30, 2019</th>\r\n                                                <th>Check the seals</th>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <button className=\"btn btn-secondary\" >Add Service</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        \r\n                        {/* add equipment */}\r\n                        <button className=\"btn btn-secondary\" id=\"addWellEquip\">Add Equipment</button>\r\n                    </div>\r\n                    </TabPane>\r\n                </TabContent>\r\n            </div>\r\n            {/* oil Modal */}\r\n            <div className=\"modal fade\" role=\"dialog\" id=\"oilModal\">\r\n                <div className=\"modal-dialog modal-lg align-content-center\">\r\n                    <div className=\"modal-content\">\r\n\r\n                        <div className=\"modal-header\">\r\n                            <h4>Well House 1: Motor</h4>\r\n                        </div>\r\n\r\n                        <div className=\"modal-body\">\r\n                            <form>\r\n                                This will be where data is updated\r\n                            </form>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* add Equipment Form */}\r\n            <div className=\"modal fade\" role=\"dialog\" id=\"wellEquipForm\">\r\n                <div className=\"modal-dialog modal-lg align-content-center\">\r\n                    <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h4>Add Equipment for Well House 1</h4>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <form>\r\n\r\n                                </form>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Maintenance;","export const baseUrl = 'http://localhost:3002/';\r\n","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\nexport const fetchLocations = () => (dispatch) => {\r\n    \r\n    dispatch(locationsLoading());\r\n\r\n    return fetch(baseUrl + 'locations')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addLocations(promos)))\r\n    .catch(error => dispatch(locationsFailed(error.message)));\r\n}\r\n\r\n\r\nexport const locationsLoading = () => ({\r\n    type: ActionTypes.LOCATIONS_LOADING\r\n});\r\n\r\nexport const locationsFailed = (errmess) => ({\r\n    type: ActionTypes.LOCATIONS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLocations = (dishes) => ({\r\n    type: ActionTypes.ADD_LOCATIONS,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchEquipment = () => (dispatch) => {\r\n    \r\n    dispatch(equipmentLoading());\r\n\r\n    return fetch(baseUrl + 'locations')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addEquipment(promos)))\r\n    .catch(error => dispatch(equipmentFailed(error.message)));\r\n}\r\n\r\n\r\nexport const equipmentLoading = () => ({\r\n    type: ActionTypes.EQUIPMENT_LOADING\r\n});\r\n\r\nexport const equipmentFailed = (errmess) => ({\r\n    type: ActionTypes.EQUIPMENT_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addEquipment = (dishes) => ({\r\n    type: ActionTypes.ADD_EQUIPMENT,\r\n    payload: dishes\r\n});\r\n\r\nexport const postEquipment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newEquipment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newEquipment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'equipment', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newEquipment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addEquipment(response)))\r\n    .catch(error =>  { console.log('post equipment', error.message);\r\n      alert('Your equipment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchService = () => (dispatch) => {\r\n    \r\n    dispatch(serviceLoading());\r\n\r\n    return fetch(baseUrl + 'locations')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addService(promos)))\r\n    .catch(error => dispatch(serviceFailed(error.message)));\r\n}\r\n\r\n\r\nexport const serviceLoading = () => ({\r\n    type: ActionTypes.SERVICE_LOADING\r\n});\r\n\r\nexport const serviceFailed = (errmess) => ({\r\n    type: ActionTypes.SERVICE_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addService = (dishes) => ({\r\n    type: ActionTypes.ADD_SERVICE,\r\n    payload: dishes\r\n});\r\n\r\nexport const postService = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newService = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newService.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newService),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addService(response)))\r\n    .catch(error =>  { console.log('post service', error.message);\r\n      alert('Your service could not be posted\\nError: '+error.message); });\r\n};","export const LOCATIONS_LOADING = 'LOCATIONS_LOADING';\r\nexport const LOCATIONS_FAILED = 'LOCATIONS_FAILED';\r\nexport const ADD_LOCATIONS = 'ADD_LOCATIONS';\r\n\r\nexport const EQUIPMENT_LOADING = 'EQUIPMENT_LOADING';\r\nexport const EQUIPMENT_FAILED = 'EQUIPMENT_FAILED';\r\nexport const ADD_EQUIPMENT = 'ADD_EQUIPMENT';\r\n\r\nexport const ADD_SERVICE = 'ADD_SERVICE';\r\nexport const SERVICE_LOADING = 'SERVICE_LOADING';\r\nexport const SERVICE_FAILED = 'SERVICE_FAILED';","import React, {Component} from 'react';\r\nimport { Navbar } from 'reactstrap';\r\nimport { BrowserRouter,Switch, Route,withRouter } from 'react-router-dom';\r\nimport NavNav from './nav';\r\nimport Home from './Home';\r\nimport Maintenance from './maintenance';\r\n\r\nimport { fetchLocations, postService, fetchEquipment } from '../redux/ActionCreators';\r\nimport { connect } from 'react-redux';\r\n//import { actions } from 'react-redux-form';\r\n//import { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    locations: state.locations,\r\n    equipment: state.comments,\r\n    services: state.promotions,\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n  postService: (dishId, rating, author, comment) => dispatch(postService(dishId, rating, author, comment)),  \r\n  fetchEquipment: () => { dispatch(fetchEquipment())},\r\n  \r\n  fetchLocations: () => { dispatch(fetchLocations())}\r\n});\r\n\r\nclass Main extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n      }\r\n    componentDidMount() {\r\n        this.props.fetchLocations();\r\n        this.props.fetchEquipment();\r\n\r\n    }\r\n    render(){\r\n        const EquipWithId = ({match}) => {\r\n            return(\r\n                <Maintenance equip={this.state.equipList.filter(\r\n                    (equip) => equip.id === parseInt(match.params.id,10))[0]} \r\n                    tab='1'\r\n                    addEquipment={this.props.addEquipment}\r\n                   />\r\n            );\r\n            }\r\n        return(\r\n            <div className=\"container\">\r\n                <Navbar light>\r\n                    <NavNav/>\r\n                </Navbar>\r\n                <BrowserRouter>\r\n                    <Switch>\r\n                        <Route path=\"/equip/:id\" render={EquipWithId}/>\r\n                        <Route path=\"/\" render={Home} />\r\n                    </Switch>\r\n                </BrowserRouter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","// TODO: make this a rest call at start up to get all info\r\n\r\n\r\nexport const EQUIPLIST = \r\n[\r\n    {\r\n        id:1,\r\n        name:'Well House 1',\r\n        location:'to get from gis',\r\n        equipment:[\r\n            {   \r\n                id:1,\r\n                name:\"motor\",\r\n                open:true,\r\n                properties:[\r\n                    {\r\n                        name:\"Horse Power\",           \r\n                        prop:\"this\"\r\n                    },{\r\n                        name:\"Oil Type\",           \r\n                        prop:\"this\"\r\n                    },{\r\n                        name:\"Serial Number\",           \r\n                        prop:\"this\"\r\n                    },{\r\n                        name:\"Grease Type\",           \r\n                        prop:\"this\"\r\n                    }\r\n                ],\r\n                services:[\r\n                    {\r\n                        id:\"1\",\r\n                        type:\"Oil Channge\",\r\n                        date:\"09-01-05\",\r\n                        previousDate:\"09-01-02\",\r\n                        person:\"Brady\",\r\n                        notes:\"send out oil\"\r\n                    },{\r\n                        id:\"2\",\r\n                        type:\"boop\",\r\n                        date:\"09-01-21\",\r\n                        previousDate:\"09-01-22\",\r\n                        person:\"who dis?\",\r\n                        notes:\"\"\r\n                    }\r\n                ]   \r\n            },\r\n            {\r\n                id:2,\r\n                name:\"Meter Flow\",\r\n                open:false,\r\n                properties:[\r\n                    {\r\n\r\n                    }\r\n                ],\r\n                services:[\r\n                    {\r\n\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        chlorinatorEquipment:[\r\n            {   \r\n                id:1,\r\n                name:\"motor\",\r\n                properties:[\r\n                    {\r\n                        name:\"Horse Power\",           \r\n                        prop:\"this\"\r\n                    },{\r\n                        name:\"Oil Type\",           \r\n                        prop:\"this\"\r\n                    },{\r\n                        name:\"Serial Number\",           \r\n                        prop:\"this\"\r\n                    },{\r\n                        name:\"Grease Type\",           \r\n                        prop:\"this\"\r\n                    }\r\n                ],\r\n                services:[\r\n                    {\r\n                        id:\"1\",\r\n                        type:\"poop\",\r\n                        date:\"09-01-02\",\r\n                        person:\"who dat?\"\r\n                    },{\r\n                        id:\"2\",\r\n                        type:\"boop\",\r\n                        date:\"09-01-22\",\r\n                        person:\"who dis?\"\r\n                    }\r\n                ]   \r\n            },\r\n            {\r\n                id:2,\r\n                name:\"Meter Flow\",\r\n                properties:[\r\n                    {\r\n\r\n                    }\r\n                ],\r\n                services:[\r\n                    {\r\n\r\n                    }\r\n                ]\r\n            }\r\n        \r\n        ],\r\n\r\n    },\r\n    {\r\n        id:2,\r\n        name:'Well House 2',\r\n        location:'to get from gis',\r\n        equipment:[\r\n            {   \r\n                id:1,\r\n                motor:[\r\n                    {           \r\n                        horsePower:\"\",\r\n                        oilType:\"\",\r\n                        serial:\"\",\r\n                        greaseType:\"\",\r\n                        services:[\r\n                            {\r\n                                id:\"\",\r\n                                type:\"\",\r\n                                date:\"\",\r\n                                person:\"\"\r\n                            }\r\n                        ]   \r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                id:2,\r\n                flowMeter:[\r\n                    {\r\n\r\n                    }\r\n                ]\r\n            }\r\n        \r\n            \r\n        ],\r\n        chlorinatorService:[\r\n\r\n        ],\r\n    }\r\n];\r\n\r\nexport const WellEquipment = [\r\n    {\r\n    motor:[{           \r\n        horsePower:\"\",\r\n        oilType:\"\",\r\n        serial:\"\",\r\n        greaseType:\"\",\r\n        services:[{\r\n            id:\"\",\r\n            type:\"\",\r\n            date:\"\",\r\n            person:\"\",\r\n        }]\r\n    }\r\n    ],\r\n    pump:'???',\r\n    pumpControlValve:'???',\r\n    pumpDischargeValve:'???',\r\n    highPSI:'???',\r\n    flowMeter:'???',\r\n    airVacValve:'???',\r\n    preLubeValve:'???',\r\n    coolers:'???',\r\n    psiTransducer:'???',\r\n    pipingValves:'???'\r\n    }\r\n];\r\n\r\nexport const ChlorEquipment = [\r\n    {\r\n        cl2Pump:'???',\r\n        cl2Motor:'???',\r\n        pipingValves:'???',\r\n        pumpSielondid:'???',\r\n        flowMeter:'???',\r\n        psiGages:'???',\r\n        checkValves:'???',\r\n        tankFloat:'???',\r\n        cl2DepositFilter:'???',\r\n        fanExhaust:'???',\r\n        heaterThermostat:'???'\r\n    }\r\n]","export const InitialNewEquip = {\r\n    name: '',\r\n    horsePower: '',\r\n    oilType: '',\r\n    serial: '',\r\n    greaseType: ''\r\n};\r\nexport const InitialNewService = {\r\n    serviceName: '',\r\n    name: '',\r\n    notes: '',\r\n    \r\n};","import React, {Component} from 'react';\r\nimport Main from './componets/Main';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ConfigureStore } from './redux/configureStore';\r\nimport './App.css';\r\n\r\nconst store = ConfigureStore();\r\n\r\nclass App extends Component {\r\n  render(){\r\n    return (\r\n      <Provider store={store}>\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <Main />\r\n        </div>\r\n      </BrowserRouter>\r\n    </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import {createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport {EQUIPLIST} from '../shared/equipList';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialNewEquip, InitialNewService } from './forms';\r\n\r\n\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            equipList: EQUIPLIST,\r\n            \r\n            ...createForms({\r\n                newService: InitialNewService,\r\n                newEquip: InitialNewEquip\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { AuthenticationContext, adalFetch, withAdalLogin } from 'react-adal';\r\n\r\nconst adalConfig = {\r\n tenant: 'ebba2929-765b-48f7-8c03-9b450ed099ba',\r\n clientId: '47ad89ca-350f-470e-a8f7-d39d5ca1df5c',\r\n endpoints: {\r\n     api: '47ad89ca-350f-470e-a8f7-d39d5ca1df5c'\r\n },\r\n apiUrl: 'https://bermuda.verawaterandpower.com',\r\n cacheLocation: 'localStorage'\r\n};\r\nexport const authContext = new AuthenticationContext(adalConfig);\r\nexport const adalApiFetch = (fetch, url, options) =>\r\n    adalFetch(authContext, adalConfig.endpoints.api, fetch, adalConfig.apiUrl + url, options);\r\nexport const withAdalLoginApi = withAdalLogin(authContext, adalConfig.endpoints.api);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { runWithAdal } from 'react-adal';\r\nimport { authContext } from './AuthConfig';\r\n\r\n//ReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\nconst DO_NOT_LOGIN = false;\r\nrunWithAdal(authContext, () => {\r\n    ReactDOM.render(<App />, document.getElementById('root'));\r\n     //Hot Module Replacement API\r\n    if (module.hot) {\r\n        module.hot.accept('./App.js', () => {\r\n            const NextApp = require('./App').default;\r\n            ReactDOM.render(<NextApp />, document.getElementById('root'));\r\n        });\r\n    }\r\n\r\n}, DO_NOT_LOGIN);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}